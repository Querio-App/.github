name: 'GitHub Cleanup Deployment Status'
description: 'Marks deployments as inactive and adds PR comment about cleanup'
inputs:
  github-token:
    description: 'GitHub token with deployments permission'
    required: true
  pr-number:
    description: 'Pull request number'
    required: true
  review-app-name:
    description: 'Name of the review app that was cleaned up'
    required: true
runs:
  using: "composite"
  steps:
    - name: Mark deployments as inactive
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github-token }}
        script: |
          const environment = `pr-${{ inputs.pr-number }}`;
          const reviewAppName = "${{ inputs.review-app-name }}";
          
          // Get deployments for this environment
          const { data: deployments } = await github.rest.repos.listDeployments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            environment: environment
          });
          
          // Mark each deployment as inactive
          for (const deployment of deployments) {
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.id,
              state: 'inactive',
              description: 'Review app has been cleaned up',
              environment: environment,
              log_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            });
          }
          
          // Also add a comment to the PR
          await github.rest.issues.createComment({
            issue_number: ${{ inputs.pr-number }},
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `ðŸ§¹ Review app \`${reviewAppName}\` has been cleaned up successfully.`
          });