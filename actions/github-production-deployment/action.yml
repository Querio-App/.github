name: 'GitHub Production Deployment Status'
description: 'Creates and updates GitHub deployment status for production'
inputs:
  github-token:
    description: 'GitHub token with deployments permission'
    required: true
  production-url:
    description: 'URL of the production environment'
    required: true
runs:
  using: "composite"
  steps:
    - name: Create Deployment Status
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github-token }}
        script: |
          const environment = 'production';
          
          // Create a deployment
          const { data: deployment } = await github.rest.repos.createDeployment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: 'main',
            environment: environment,
            auto_merge: false,
            required_contexts: [],
            description: 'Production Deployment'
          });
          
          // Update deployment status to success
          await github.rest.repos.createDeploymentStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            deployment_id: deployment.id,
            state: 'success',
            environment: environment,
            environment_url: '${{ inputs.production-url }}',
            description: 'Deployment successful!',
            auto_inactive: false,
            log_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
          });